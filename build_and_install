#!/usr/bin/env bash

# If user entered Ctrl-C, kill all subprocesses.
set -euo pipefail
trap "pkill -P $$;exit -1" SIGHUP SIGINT SIGTERM

BASE_DIR=$(dirname "$0")

export PATH_TO_MEMSQL=$1
shift
export INSTALL_TO=$1
shift

cd $BASE_DIR

function DoBuild() {
    local FLAVOR=$1
    local TARGET=$2

    rm -rf build_$FLAVOR

    # We use Intel's "math kernel library" as a faster drop-in replacement for
    # BLAS, as recommended by faiss in e.g.
    # https://github.com/facebookresearch/faiss/blob/main/INSTALL.md.
    #
    # Note that the actual install instructions there are simply wrong - there
    # are a few github issues about it.
    #
    # faiss's FindMKL.cmake looks for mkl libs under MKLROOT. Run
    # 'build_and_install_mkl $PATH_TO_MEMSQL $PATH_TO_MEMSQL/vendor'
    # to update those libs.
    #
    # libfaiss.a doesn't bundle mkl libs or care whether it's using
    # blass vs mkl, but telling the faiss build about it is useful to
    # sanity check that we've found the necessary libs, and also to
    # manually build stuff like faiss tests.
    #
    # MKL has "lp64" and "ilp64" variants of its libs. They differ in
    # whether they expect inputs of some "implementation-defined"
    # types like `int` to be 64 bit. Our build is lp64, and faiss
    # doesn't have special logic to override that or something:
    # (e.g. https://github.com/facebookresearch/faiss/issues/2641).
    #
    export MKLROOT=$(readlink -f $BASE_DIR/faiss_mkl_libs)

    # Unsplit and unzip libmkl_core.tar.gz
    #
    mkdir -p ${MKLROOT}
    cp ${INSTALL_TO}/lib/libmkl* ${MKLROOT}
    cat ${MKLROOT}/libmkl_core.tar.gz* | tar -C ${MKLROOT} -xzf -

    cmake -B build_$FLAVOR . \
              -DBLA_VENDOR=Intel10_64lp_seq \
              -DMKL_REQUIRED=REQUIRED \
              -DBUILD_TESTING=OFF \
              -DCMAKE_BUILD_TYPE=${FLAVOR} \
              -DCMAKE_CXX_COMPILER=/usr/local/clang+llvm/bin/clang++ \
              -DCMAKE_CXX_FLAGS="-Wignored-optimization-argument -fno-omit-frame-pointer" \
              -DFAISS_OPT_LEVEL=avx2 \
              -DCMAKE_INSTALL_PREFIX=./build_$FLAVOR \
              -DFAISS_ENABLE_GPU=OFF \
              -DFAISS_ENABLE_PYTHON=OFF \
              -DBUILD_SHARED_LIBS=ON \
              -DBLA_STATIC=OFF \
              ;

    VERBOSE=1 make -C build_$FLAVOR -j faiss
    VERBOSE=1 make -C build_$FLAVOR install

    cp ./build_$FLAVOR/lib64/libfaiss.so $INSTALL_TO/$TARGET/libfaiss.so
    cp ./build_$FLAVOR/lib64/libfaiss_avx2.so $INSTALL_TO/$TARGET/libfaiss_avx2.so
    cp -r ./build_$FLAVOR/include/faiss $INSTALL_TO/include

    VERBOSE=1 make -C build_$FLAVOR clean

    git rev-parse HEAD > ${INSTALL_TO}/source-git-hashes/faiss.git_hash
}

DoBuild Debug debug
DoBuild RelWithDebInfo release
DoBuild Release production
